[
    {
        "id": "c8c55875b6236dc8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ea96bb5300db4db3",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "4cd7031c86a22124",
        "type": "inject",
        "z": "c8c55875b6236dc8",
        "name": "Fake_Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "max",
                "v": "100",
                "vt": "num"
            },
            {
                "p": "sensorId",
                "v": "temp1",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "2c3f44ff0f347a4f"
            ]
        ]
    },
    {
        "id": "2c3f44ff0f347a4f",
        "type": "function",
        "z": "c8c55875b6236dc8",
        "name": "Random_Values",
        "func": "\nconst randomValue = {};\nrandomValue.sensorId = msg.sensorId;\nrandomValue.payload = Math.random()*msg.max;\nrandomValue.timestamp = msg.payload;\nreturn randomValue;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 220,
        "wires": [
            [
                "8dd68a3d395798b3"
            ]
        ]
    },
    {
        "id": "756b4ea0e58bee1e",
        "type": "debug",
        "z": "c8c55875b6236dc8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 140,
        "wires": []
    },
    {
        "id": "8dd68a3d395798b3",
        "type": "function",
        "z": "c8c55875b6236dc8",
        "name": "prepare_azure_message",
        "func": "const dataMessage = {    \n\t\tsensorId: msg.sensorId,    \n        val: msg.payload,   \n\t\ttimestamp: msg.timestamp};\n\nconst azureMessage = { \n\t\t\"deviceId\": \"raspberry_pi_1\",  \n\t\t\"key\": \"xZWDDqAhhWFrGdiDmVFyAm2x0tIsL4UZ/DRDqRhT/tM=\",  \n\t\t\"protocol\": \"mqtt\", \n\t\t\"data\": dataMessage };\n\nconst message2send = {};\nmessage2send.payload = azureMessage;\nreturn message2send;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 220,
        "wires": [
            [
                "756b4ea0e58bee1e",
                "4742fb8364f19bfb"
            ]
        ]
    },
    {
        "id": "4742fb8364f19bfb",
        "type": "azureiothub",
        "z": "c8c55875b6236dc8",
        "name": "Azure IoT Hub",
        "protocol": "mqtt",
        "x": 840,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "32330f9a6589f117",
        "type": "inject",
        "z": "c8c55875b6236dc8",
        "name": "Fake_Sensor_2",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "max",
                "v": "100",
                "vt": "num"
            },
            {
                "p": "sensorId",
                "v": "temp2",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "6bbdc1c3d65b1549"
            ]
        ]
    },
    {
        "id": "6bbdc1c3d65b1549",
        "type": "function",
        "z": "c8c55875b6236dc8",
        "name": "Random_Values",
        "func": "\nconst randomValue = {};\nrandomValue.sensorId = msg.sensorId;\nrandomValue.payload = Math.random()*msg.max;\nrandomValue.timestamp = msg.payload;\nreturn randomValue;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 300,
        "wires": [
            [
                "66332c88510ec628"
            ]
        ]
    },
    {
        "id": "66332c88510ec628",
        "type": "function",
        "z": "c8c55875b6236dc8",
        "name": "prepare_azure_message",
        "func": "const dataMessage = {    \n\t\tsensorId: msg.sensorId,    \n        val: msg.payload,   \n\t\ttimestamp: msg.timestamp};\n\nconst azureMessage = { \n\t\t\"deviceId\": \"raspberry_pi_1\",  \n\t\t\"key\": \"1Ejo4geKiSTlrQkWior6v4aDUKt6N5DlLp+kZH7IPRw=\",  \n\t\t\"protocol\": \"mqtt\", \n\t\t\"data\": dataMessage };\n\nconst message2send = {};\nmessage2send.payload = azureMessage;\nreturn message2send;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 300,
        "wires": [
            [
                "4742fb8364f19bfb",
                "756b4ea0e58bee1e"
            ]
        ]
    },
    {
        "id": "a75382935a44078b",
        "type": "mqtt in",
        "z": "c8c55875b6236dc8",
        "name": "Prueba_MQTT",
        "topic": "mqtt_brocker/test",
        "qos": "0",
        "datatype": "json",
        "broker": "ea96bb5300db4db3",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 420,
        "wires": [
            [
                "0fd5384c124326c7"
            ]
        ]
    },
    {
        "id": "0fd5384c124326c7",
        "type": "function",
        "z": "c8c55875b6236dc8",
        "name": "MQTT_Message",
        "func": "const formatedMessage = {};\nformatedMessage.sensorId = msg.payload.sensorId;\nformatedMessage.payload = msg.payload.val;\nformatedMessage.timestamp = msg.payload.timestamp;\n\nreturn formatedMessage;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 420,
        "wires": [
            [
                "66332c88510ec628"
            ]
        ]
    }
]